name: Deploy Vulnerable Application                                  # workflow name

on:
  push:
    branches:
      - master
jobs:

  gitleaks:
    name: Gitleaks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2.3.2 
  
  semgrep-sast:
    name: SAST Semgrep
    runs-on: ubuntu-latest
    permissions:
      # required for all workflows
      security-events: write
      actions: read
      contents: read
    container: returntocorp/semgrep
    steps:
      - uses: actions/checkout@v3
      - run: semgrep ci --sarif --output=semgrep.sarif || true
        env:
            SEMGREP_RULES: p/default
      - run: semgrep ci --json --output=semgrep.json || true
        env:
          SEMGREP_RULES: p/default
      - name: Upload Semgrep scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'semgrep.sarif'
      - name: Semgrep Report
        uses: actions/upload-artifact@v3
        with:
          name: semgrep.json
          path: semgrep.json
#  trufflehog:
#    name: TruffleHog
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Run Trufflehog
#        uses: trufflesecurity/trufflehog@v3.44.0
#        with:
#          path: ./
#          base: ${{ github.event.repository.default_branch }}
#          head: HEAD
#          extra_args: --debug --no-verification --json
          
  trivy:
      name: Aqua Security Trivy
      runs-on: ubuntu-latest
      permissions:
        # required for all workflows
        security-events: write
        actions: read
        contents: read
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Build an image from Dockerfile
          run: |
            docker build -t trivy-image:${{ github.sha }} .
        - name: Run Trivy vulnerability scanner
          uses: aquasecurity/trivy-action@master
          continue-on-error: true
          with:
            image-ref: 'trivy-image:${{ github.sha }}'
#            format: 'sarif'
#            output: 'trivy-results.sarif'
            format: 'json'
            output: 'trivy-results.json'
            severity: 'LOW,MEDIUM,HIGH,CRITICAL'
#        - name: Upload Trivy scan results to GitHub Security tab
#          uses: github/codeql-action/upload-sarif@v2
#          with:
#            sarif_file: 'trivy-results.sarif'
        - name: Trivy Report
          uses: actions/upload-artifact@v3
          with:
            name: trivy-results.json
            path: trivy-results.json

  deploy-heroku:
    name: Deploy Heroku
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "nicolas-villa-c3" #Must be unique in Heroku
          heroku_email: ${{secrets.EMAIL_ADDRESS}}
          branch: "master"
          usedocker: true
  
  zap_scan:
      runs-on: ubuntu-latest
      #needs: security
      needs: deploy-heroku
      name: Run DAST scan on the web application
      steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            ref: master
        - name: ZAP Scan
          uses: zaproxy/action-full-scan@v0.5.1
          with:
            docker_name: 'owasp/zap2docker-stable'
            target: ${{secrets.APP_URL}}
            rules_file_name: '.zap/rules.tsv'
            cmd_options: '-a -x zap-dast.xml'
            artifact_name: 'zap-dast.xml'
            allow_issue_writing: false
        - name: ZAP Report
          uses: actions/upload-artifact@v3
          with:
            name: zap-dast.xml
            path: zap-dast.xml
